{"ast":null,"code":"var _jsxFileName = \"/Users/nikolajwold/Desktop/Projects/imdb/src/components/Content.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Search from \"./Search\";\nimport MovieContainer from \"./MovieContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Content() {\n  _s();\n  const [movieData, setMovieData] = React.useState([]);\n  const [selectedMovie, setSelectedMovie] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  function handleMovieReset() {\n    setSelectedMovie(null);\n  }\n  const handleMovieClick = movie => {\n    setSelectedMovie(movie);\n    console.log(movie);\n  };\n  const fetchData = title => {\n    setLoading(true);\n    const apiKey = \"b64be8fa\";\n    fetch(`http://www.omdbapi.com/?apikey=${apiKey}&s=${title}`).then(response => response.json()).then(data => {\n      if (data.Search) {\n        const imdbIDs = data.Search.map(movie => movie.imdbID);\n        const fetchPromises = imdbIDs.map(imdbID => fetch(`http://www.omdbapi.com/?apikey=${apiKey}&i=${imdbID}&plot=full`).then(response => response.json()));\n        Promise.all(fetchPromises).then(detailedDataArray => {\n          const combinedData = data.Search.map((movie, index) => ({\n            ...movie,\n            ...detailedDataArray[index]\n          }));\n          setMovieData(combinedData);\n        }).catch(error => {\n          console.error(\"Error fetching detailed data:\", error);\n        }).finally(() => {\n          setLoading(false);\n        });\n      } else {\n        setMovieData([]);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching search results:\", error);\n      setLoading(false);\n    });\n  };\n  React.useEffect(() => {\n    fetchData(\"\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [!selectedMovie && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 26\n    }, this), !selectedMovie && /*#__PURE__*/_jsxDEV(Search, {\n      onSearch: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 26\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-icon\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fa-solid fa-spinner fa-spin fa-2xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MovieContainer, {\n      movieData: movieData,\n      handleMovieClick: handleMovieClick,\n      handleMovieReset: handleMovieReset,\n      selectedMovie: selectedMovie,\n      setSelectedMovie: setSelectedMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Content, \"n+xooq9+ZdCW4ibmh4S2DF3SXew=\");\n_c = Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","Search","MovieContainer","jsxDEV","_jsxDEV","Content","_s","movieData","setMovieData","useState","selectedMovie","setSelectedMovie","loading","setLoading","handleMovieReset","handleMovieClick","movie","console","log","fetchData","title","apiKey","fetch","then","response","json","data","imdbIDs","map","imdbID","fetchPromises","Promise","all","detailedDataArray","combinedData","index","catch","error","finally","useEffect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","class","_c","$RefreshReg$"],"sources":["/Users/nikolajwold/Desktop/Projects/imdb/src/components/Content.js"],"sourcesContent":["import React from \"react\";\nimport Search from \"./Search\";\nimport MovieContainer from \"./MovieContainer\";\n\nexport default function Content() {\n  const [movieData, setMovieData] = React.useState([]);\n  const [selectedMovie, setSelectedMovie] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n\n  function handleMovieReset() {\n    setSelectedMovie(null);\n  }\n\n  const handleMovieClick = (movie) => {\n    setSelectedMovie(movie);\n    console.log(movie);\n  };\n\n  const fetchData = (title) => {\n    setLoading(true);\n    const apiKey = \"b64be8fa\";\n    fetch(`http://www.omdbapi.com/?apikey=${apiKey}&s=${title}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.Search) {\n          const imdbIDs = data.Search.map((movie) => movie.imdbID);\n          const fetchPromises = imdbIDs.map((imdbID) =>\n            fetch(\n              `http://www.omdbapi.com/?apikey=${apiKey}&i=${imdbID}&plot=full`\n            ).then((response) => response.json())\n          );\n\n          Promise.all(fetchPromises)\n            .then((detailedDataArray) => {\n              const combinedData = data.Search.map((movie, index) => ({\n                ...movie,\n                ...detailedDataArray[index],\n              }));\n              setMovieData(combinedData);\n            })\n            .catch((error) => {\n              console.error(\"Error fetching detailed data:\", error);\n            })\n            .finally(() => {\n              setLoading(false);\n            });\n        } else {\n          setMovieData([]);\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching search results:\", error);\n        setLoading(false);\n      });\n  };\n\n  React.useEffect(() => {\n    fetchData(\"\");\n  }, []);\n\n  return (\n    <div className=\"content\">\n      {!selectedMovie && <h1>Movies</h1>}\n      {!selectedMovie && <Search onSearch={fetchData} />}\n      {loading ? (\n        <div className=\"loading-icon\">\n          <i class=\"fa-solid fa-spinner fa-spin fa-2xl\"></i>\n        </div>\n      ) : (\n        <MovieContainer\n          movieData={movieData}\n          handleMovieClick={handleMovieClick}\n          handleMovieReset={handleMovieReset}\n          selectedMovie={selectedMovie}\n          setSelectedMovie={setSelectedMovie}\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}