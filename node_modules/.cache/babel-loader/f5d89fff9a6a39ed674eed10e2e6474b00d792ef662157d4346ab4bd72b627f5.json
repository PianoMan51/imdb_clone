{"ast":null,"code":"var _jsxFileName = \"/Users/nikolajwold/Desktop/Projects/imdb/src/components/Content.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Search from \"./Search\";\nimport MovieContainer from \"./MovieContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction renderStarIcons(rating) {\n  const starIcons = [];\n  const totalStars = 5;\n  for (let i = 1; i <= totalStars; i++) {\n    if (i <= rating) {\n      starIcons.push( /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-star\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 22\n      }, this));\n    } else if (i - 0.5 === rating) {\n      starIcons.push( /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-star-half-stroke\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 22\n      }, this));\n    } else {\n      starIcons.push( /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-regular fa-star\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 22\n      }, this));\n    }\n  }\n  return starIcons;\n}\nexport default function Content() {\n  _s();\n  const [movieData, setMovieData] = React.useState([]);\n  const [selectedMovie, setSelectedMovie] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  function handleMovieReset() {\n    setSelectedMovie(null);\n  }\n  const handleMovieClick = movie => {\n    setSelectedMovie(movie);\n    console.log(movie);\n  };\n  const fetchData = title => {\n    setLoading(true);\n    const apiKey = \"b64be8fa\";\n    fetch(`http://www.omdbapi.com/?apikey=${apiKey}&s=${title}`).then(response => response.json()).then(data => {\n      if (data.Search) {\n        const imdbIDs = data.Search.map(movie => movie.imdbID);\n        const fetchPromises = imdbIDs.map(imdbID => fetch(`http://www.omdbapi.com/?apikey=${apiKey}&i=${imdbID}&plot=full`).then(response => response.json()));\n        Promise.all(fetchPromises).then(detailedDataArray => {\n          const combinedData = data.Search.map((movie, index) => ({\n            ...movie,\n            ...detailedDataArray[index]\n          }));\n          setMovieData(combinedData);\n        }).catch(error => {\n          console.error(\"Error fetching detailed data:\", error);\n        }).finally(() => {\n          setLoading(false); // Set loading state to false when done\n        });\n      } else {\n        setMovieData([]);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching search results:\", error);\n      setLoading(false);\n    });\n  };\n  React.useEffect(() => {\n    fetchData(\"\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [!selectedMovie && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 26\n    }, this), !selectedMovie && /*#__PURE__*/_jsxDEV(Search, {\n      onSearch: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 26\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"i\", {\n      class: \"fa-solid fa-spinner fa-spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MovieContainer, {\n      movieData: movieData,\n      renderStarIcons: renderStarIcons,\n      handleMovieClick: handleMovieClick,\n      handleMovieReset: handleMovieReset,\n      selectedMovie: selectedMovie,\n      setSelectedMovie: setSelectedMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Content, \"n+xooq9+ZdCW4ibmh4S2DF3SXew=\");\n_c = Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","Search","MovieContainer","jsxDEV","_jsxDEV","renderStarIcons","rating","starIcons","totalStars","i","push","className","fileName","_jsxFileName","lineNumber","columnNumber","Content","_s","movieData","setMovieData","useState","selectedMovie","setSelectedMovie","loading","setLoading","handleMovieReset","handleMovieClick","movie","console","log","fetchData","title","apiKey","fetch","then","response","json","data","imdbIDs","map","imdbID","fetchPromises","Promise","all","detailedDataArray","combinedData","index","catch","error","finally","useEffect","children","onSearch","class","_c","$RefreshReg$"],"sources":["/Users/nikolajwold/Desktop/Projects/imdb/src/components/Content.js"],"sourcesContent":["import React from \"react\";\nimport Search from \"./Search\";\nimport MovieContainer from \"./MovieContainer\";\n\nfunction renderStarIcons(rating) {\n  const starIcons = [];\n  const totalStars = 5;\n\n  for (let i = 1; i <= totalStars; i++) {\n    if (i <= rating) {\n      starIcons.push(<i key={i} className=\"fa-solid fa-star\"></i>);\n    } else if (i - 0.5 === rating) {\n      starIcons.push(<i key={i} className=\"fa-solid fa-star-half-stroke\"></i>);\n    } else {\n      starIcons.push(<i key={i} className=\"fa-regular fa-star\"></i>);\n    }\n  }\n\n  return starIcons;\n}\n\nexport default function Content() {\n  const [movieData, setMovieData] = React.useState([]);\n  const [selectedMovie, setSelectedMovie] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n\n  function handleMovieReset() {\n    setSelectedMovie(null);\n  }\n\n  const handleMovieClick = (movie) => {\n    setSelectedMovie(movie);\n    console.log(movie);\n  };\n\n  const fetchData = (title) => {\n    setLoading(true);\n    const apiKey = \"b64be8fa\";\n    fetch(`http://www.omdbapi.com/?apikey=${apiKey}&s=${title}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.Search) {\n          const imdbIDs = data.Search.map((movie) => movie.imdbID);\n          const fetchPromises = imdbIDs.map((imdbID) =>\n            fetch(\n              `http://www.omdbapi.com/?apikey=${apiKey}&i=${imdbID}&plot=full`\n            ).then((response) => response.json())\n          );\n\n          Promise.all(fetchPromises)\n            .then((detailedDataArray) => {\n              const combinedData = data.Search.map((movie, index) => ({\n                ...movie,\n                ...detailedDataArray[index],\n              }));\n              setMovieData(combinedData);\n            })\n            .catch((error) => {\n              console.error(\"Error fetching detailed data:\", error);\n            })\n            .finally(() => {\n              setLoading(false); // Set loading state to false when done\n            });\n        } else {\n          setMovieData([]);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching search results:\", error);\n        setLoading(false);\n      });\n  };\n\n  React.useEffect(() => {\n    fetchData(\"\");\n  }, []);\n\n  return (\n    <div className=\"content\">\n      {!selectedMovie && <h1>Movies</h1>}\n      {!selectedMovie && <Search onSearch={fetchData} />}\n      {loading ? (\n        <i class=\"fa-solid fa-spinner fa-spin\"></i>\n      ) : (\n        <MovieContainer\n          movieData={movieData}\n          renderStarIcons={renderStarIcons}\n          handleMovieClick={handleMovieClick}\n          handleMovieReset={handleMovieReset}\n          selectedMovie={selectedMovie}\n          setSelectedMovie={setSelectedMovie}\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}