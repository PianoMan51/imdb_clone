{"ast":null,"code":"var _jsxFileName = \"/Users/nikolajwold/Desktop/Projects/imdb/src/components/MovieContainer.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport MovieList from \"./MovieList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction renderStarIcons(rating) {\n  const starIcons = [];\n  const totalStars = 5;\n  for (let i = 1; i <= totalStars; i++) {\n    if (i <= rating) {\n      starIcons.push( /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-star\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 22\n      }, this));\n    } else if (i - 0.5 === rating) {\n      starIcons.push( /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-star-half-stroke\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 22\n      }, this));\n    } else {\n      starIcons.push( /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-regular fa-star\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 22\n      }, this));\n    }\n  }\n  return starIcons;\n}\nexport default function Movie({\n  movieData\n}) {\n  _s();\n  const [selectedMovie, setSelectedMovie] = React.useState(null);\n  function handleMovieClick(movie) {\n    setSelectedMovie(movie);\n    console.log(movie);\n  }\n  function handleMovieReset() {\n    setSelectedMovie(null);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie--container\",\n    children: selectedMovie ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-movie--container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-movie--textContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"selected--title\",\n          children: [selectedMovie.Title, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movie--year\",\n            children: [\" (\", selectedMovie.Year, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie--rating\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedMovie.imdbRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movie-stars\",\n            children: renderStarIcons(Math.round(selectedMovie.imdbRating * 2) / 4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selected--director\",\n          children: [\"Director: \", selectedMovie.Director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selected--actors\",\n          children: [\"Actors: \", selectedMovie.Actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selected--plot\",\n          children: selectedMovie.Plot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-movie--posterContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected--poster\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedMovie.Poster,\n            alt: selectedMovie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-arrow-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: handleMovieReset,\n          children: \"Back to Movie List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-arrow-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Movie, \"JhENnUjtiZQlPFLMQh6kL0r4AXc=\");\n_c = Movie;\n{\n  /*           <div className=\"movie--stats\">\n            <span>{selectedMovie.BoxOffice}</span>\n            <span>{selectedMovie.Awards}</span>\n            <span>\n              {\n                selectedMovie.Ratings.find(\n                  (rating) => rating.Source === \"Rotten Tomatoes\"\n                ).Value\n              }\n            </span>\n          </div> */\n}\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","MovieList","jsxDEV","_jsxDEV","renderStarIcons","rating","starIcons","totalStars","i","push","className","fileName","_jsxFileName","lineNumber","columnNumber","Movie","movieData","_s","selectedMovie","setSelectedMovie","useState","handleMovieClick","movie","console","log","handleMovieReset","children","Title","Year","imdbRating","Math","round","Director","Actors","Plot","src","Poster","alt","class","onClick","_c","$RefreshReg$"],"sources":["/Users/nikolajwold/Desktop/Projects/imdb/src/components/MovieContainer.js"],"sourcesContent":["import React from \"react\";\nimport MovieList from \"./MovieList\";\n\nfunction renderStarIcons(rating) {\n  const starIcons = [];\n  const totalStars = 5;\n\n  for (let i = 1; i <= totalStars; i++) {\n    if (i <= rating) {\n      starIcons.push(<i key={i} className=\"fa-solid fa-star\"></i>);\n    } else if (i - 0.5 === rating) {\n      starIcons.push(<i key={i} className=\"fa-solid fa-star-half-stroke\"></i>);\n    } else {\n      starIcons.push(<i key={i} className=\"fa-regular fa-star\"></i>);\n    }\n  }\n\n  return starIcons;\n}\n\nexport default function Movie({ movieData }) {\n  const [selectedMovie, setSelectedMovie] = React.useState(null);\n\n  function handleMovieClick(movie) {\n    setSelectedMovie(movie);\n    console.log(movie);\n  }\n\n  function handleMovieReset() {\n    setSelectedMovie(null);\n  }\n\n  return (\n    <div className=\"movie--container\">\n      {selectedMovie ? (\n        <div className=\"selected-movie--container\">\n          <div className=\"selected-movie--textContainer\">\n            <h1 className=\"selected--title\">\n              {selectedMovie.Title}\n              <span className=\"movie--year\"> ({selectedMovie.Year})</span>\n            </h1>\n\n            <div className=\"movie--rating\">\n              <span>{selectedMovie.imdbRating}</span>\n              <span className=\"movie-stars\">\n                {renderStarIcons(Math.round(selectedMovie.imdbRating * 2) / 4)}\n              </span>\n            </div>\n            <p className=\"selected--director\">\n              Director: {selectedMovie.Director}\n            </p>\n            <p className=\"selected--actors\">Actors: {selectedMovie.Actors}</p>\n            <p className=\"selected--plot\">{selectedMovie.Plot}</p>\n          </div>\n          <div className=\"selected-movie--posterContainer\">\n            <div className=\"selected--poster\">\n              <img src={selectedMovie.Poster} alt={selectedMovie.Title} />\n            </div>\n          </div>\n\n          <div className=\"bottom-buttons\">\n            <i class=\"fa-solid fa-arrow-left\"></i>\n            <button className=\"reset-button\" onClick={handleMovieReset}>\n              Back to Movie List\n            </button>\n            <i class=\"fa-solid fa-arrow-right\"></i>\n          </div>\n        </div>\n      ) : (\n        <MovieList />\n      )}\n    </div>\n  );\n}\n\n{\n  /*           <div className=\"movie--stats\">\n            <span>{selectedMovie.BoxOffice}</span>\n            <span>{selectedMovie.Awards}</span>\n            <span>\n              {\n                selectedMovie.Ratings.find(\n                  (rating) => rating.Source === \"Rotten Tomatoes\"\n                ).Value\n              }\n            </span>\n          </div> */\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}