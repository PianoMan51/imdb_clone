{"ast":null,"code":"var _jsxFileName = \"/Users/nikolajwold/Desktop/Projects/imdb/src/components/Stats.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Stats({\n  selectedMovie\n}) {\n  var _selectedMovie$Rating;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie--stats\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-boxoffice\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: selectedMovie.BoxOffice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-awards\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: selectedMovie.Awards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-rottenTomatoes\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: ((_selectedMovie$Rating = selectedMovie.Ratings.find(rating => rating.Source === \"Rotten Tomatoes\")) === null || _selectedMovie$Rating === void 0 ? void 0 : _selectedMovie$Rating.Value) || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-language\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: selectedMovie.Language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-released\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: selectedMovie.Released\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Stats;\nvar _c;\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Stats","selectedMovie","_selectedMovie$Rating","className","children","BoxOffice","fileName","_jsxFileName","lineNumber","columnNumber","Awards","Ratings","find","rating","Source","Value","Language","Released","_c","$RefreshReg$"],"sources":["/Users/nikolajwold/Desktop/Projects/imdb/src/components/Stats.js"],"sourcesContent":["import React from \"react\";\n\nexport default function Stats({ selectedMovie }) {\n  return (\n    <div className=\"movie--stats\">\n      <div className=\"stat-boxoffice\">\n        <span>{selectedMovie.BoxOffice}</span>\n      </div>\n      <div className=\"stat-awards\">\n        <span>{selectedMovie.Awards}</span>\n      </div>\n      <div className=\"stat-rottenTomatoes\">\n        <span>\n          {selectedMovie.Ratings.find(\n            (rating) => rating.Source === \"Rotten Tomatoes\"\n          )?.Value || \"\"}\n        </span>\n      </div>\n      <div className=\"stat-language\">\n        <span>{selectedMovie.Language}</span>\n      </div>\n      <div className=\"stat-released\">\n        <span>{selectedMovie.Released}</span>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,KAAKA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAA,IAAAC,qBAAA;EAC/C,oBACEH,OAAA;IAAKI,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BL,OAAA;MAAKI,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BL,OAAA;QAAAK,QAAA,EAAOH,aAAa,CAACI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACNV,OAAA;MAAKI,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BL,OAAA;QAAAK,QAAA,EAAOH,aAAa,CAACS;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACNV,OAAA;MAAKI,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClCL,OAAA;QAAAK,QAAA,EACG,EAAAF,qBAAA,GAAAD,aAAa,CAACU,OAAO,CAACC,IAAI,CACxBC,MAAM,IAAKA,MAAM,CAACC,MAAM,KAAK,iBAChC,CAAC,cAAAZ,qBAAA,uBAFAA,qBAAA,CAEEa,KAAK,KAAI;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNV,OAAA;MAAKI,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BL,OAAA;QAAAK,QAAA,EAAOH,aAAa,CAACe;MAAQ;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACNV,OAAA;MAAKI,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BL,OAAA;QAAAK,QAAA,EAAOH,aAAa,CAACgB;MAAQ;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACS,EAAA,GAxBuBlB,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}