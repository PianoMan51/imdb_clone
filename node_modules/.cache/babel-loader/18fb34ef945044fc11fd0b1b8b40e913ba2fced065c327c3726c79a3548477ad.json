{"ast":null,"code":"var _jsxFileName = \"/Users/nikolajwold/Desktop/Projects/imdb/src/components/MovieContainer.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movie({\n  movieData,\n  renderStarIcons,\n  handleMovieReset\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie--container\",\n    children: selectedMovie ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-movie--container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-movie--textContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"selected--title\",\n          children: [selectedMovie.Title, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movie--year\",\n            children: [\" (\", selectedMovie.Year, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie--rating\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedMovie.imdbRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movie-stars\",\n            children: renderStarIcons(Math.round(selectedMovie.imdbRating * 2) / 4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selected--director\",\n          children: [\"Director: \", selectedMovie.Director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selected--actors\",\n          children: [\"Actors: \", selectedMovie.Actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selected--plot\",\n          children: selectedMovie.Plot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-movie--posterContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected--poster\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedMovie.Poster,\n            alt: selectedMovie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-arrow-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: () => handleMovieReset(setSelectedMovie),\n          children: \"Back to Movie List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-arrow-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie--list\",\n      children: movieData.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie--item\",\n        onClick: () => handleMovieClick(movie),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie--text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"movie--title\",\n            children: [movie.Title, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"movie--year\",\n              children: [\" (\", movie.Year, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: movie.Runtime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie--rating\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: movie.imdbRating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"movie-stars\",\n              children: renderStarIcons(Math.round(movie.imdbRating * 2) / 4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [movie.Type !== \"movie\" ? \"Series, \" : \"\", movie.Genre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie--poster\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.Poster,\n            alt: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = Movie;\n{\n  /*           <div className=\"movie--stats\">\n            <span>{selectedMovie.BoxOffice}</span>\n            <span>{selectedMovie.Awards}</span>\n            <span>\n              {\n                selectedMovie.Ratings.find(\n                  (rating) => rating.Source === \"Rotten Tomatoes\"\n                ).Value\n              }\n            </span>\n          </div> */\n}\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Movie","movieData","renderStarIcons","handleMovieReset","className","children","selectedMovie","Title","Year","fileName","_jsxFileName","lineNumber","columnNumber","imdbRating","Math","round","Director","Actors","Plot","src","Poster","alt","class","onClick","setSelectedMovie","map","movie","index","handleMovieClick","Runtime","Type","Genre","_c","$RefreshReg$"],"sources":["/Users/nikolajwold/Desktop/Projects/imdb/src/components/MovieContainer.js"],"sourcesContent":["import React from \"react\";\n\nexport default function Movie({\n  movieData,\n  renderStarIcons,\n  handleMovieReset,\n}) {\n  return (\n    <div className=\"movie--container\">\n      {selectedMovie ? (\n        <div className=\"selected-movie--container\">\n          <div className=\"selected-movie--textContainer\">\n            <h1 className=\"selected--title\">\n              {selectedMovie.Title}\n              <span className=\"movie--year\"> ({selectedMovie.Year})</span>\n            </h1>\n\n            <div className=\"movie--rating\">\n              <span>{selectedMovie.imdbRating}</span>\n              <span className=\"movie-stars\">\n                {renderStarIcons(Math.round(selectedMovie.imdbRating * 2) / 4)}\n              </span>\n            </div>\n            <p className=\"selected--director\">\n              Director: {selectedMovie.Director}\n            </p>\n            <p className=\"selected--actors\">Actors: {selectedMovie.Actors}</p>\n            <p className=\"selected--plot\">{selectedMovie.Plot}</p>\n          </div>\n          <div className=\"selected-movie--posterContainer\">\n            <div className=\"selected--poster\">\n              <img src={selectedMovie.Poster} alt={selectedMovie.Title} />\n            </div>\n          </div>\n\n          <div className=\"bottom-buttons\">\n            <i class=\"fa-solid fa-arrow-left\"></i>\n            <button\n              className=\"reset-button\"\n              onClick={() => handleMovieReset(setSelectedMovie)}\n            >\n              Back to Movie List\n            </button>\n            <i class=\"fa-solid fa-arrow-right\"></i>\n          </div>\n        </div>\n      ) : (\n        <div className=\"movie--list\">\n          {movieData.map((movie, index) => (\n            <div\n              key={index}\n              className=\"movie--item\"\n              onClick={() => handleMovieClick(movie)}\n            >\n              <div className=\"movie--text\">\n                <h2 className=\"movie--title\">\n                  {movie.Title}\n                  <span className=\"movie--year\"> ({movie.Year})</span>\n                </h2>\n                <span>{movie.Runtime}</span>\n\n                <div className=\"movie--rating\">\n                  <span>{movie.imdbRating}</span>\n                  <span className=\"movie-stars\">\n                    {renderStarIcons(Math.round(movie.imdbRating * 2) / 4)}\n                  </span>\n                </div>\n                <span>\n                  {movie.Type !== \"movie\" ? \"Series, \" : \"\"}\n                  {movie.Genre}\n                </span>\n              </div>\n              <div className=\"movie--poster\">\n                <img src={movie.Poster} alt={movie.Title} />\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\n{\n  /*           <div className=\"movie--stats\">\n            <span>{selectedMovie.BoxOffice}</span>\n            <span>{selectedMovie.Awards}</span>\n            <span>\n              {\n                selectedMovie.Ratings.find(\n                  (rating) => rating.Source === \"Rotten Tomatoes\"\n                ).Value\n              }\n            </span>\n          </div> */\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,KAAKA,CAAC;EAC5BC,SAAS;EACTC,eAAe;EACfC;AACF,CAAC,EAAE;EACD,oBACEJ,OAAA;IAAKK,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC9BC,aAAa,gBACZP,OAAA;MAAKK,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCN,OAAA;QAAKK,SAAS,EAAC,+BAA+B;QAAAC,QAAA,gBAC5CN,OAAA;UAAIK,SAAS,EAAC,iBAAiB;UAAAC,QAAA,GAC5BC,aAAa,CAACC,KAAK,eACpBR,OAAA;YAAMK,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAC,IAAE,EAACC,aAAa,CAACE,IAAI,EAAC,GAAC;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC,eAELb,OAAA;UAAKK,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BN,OAAA;YAAAM,QAAA,EAAOC,aAAa,CAACO;UAAU;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvCb,OAAA;YAAMK,SAAS,EAAC,aAAa;YAAAC,QAAA,EAC1BH,eAAe,CAACY,IAAI,CAACC,KAAK,CAACT,aAAa,CAACO,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC;UAAC;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNb,OAAA;UAAGK,SAAS,EAAC,oBAAoB;UAAAC,QAAA,GAAC,YACtB,EAACC,aAAa,CAACU,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eACJb,OAAA;UAAGK,SAAS,EAAC,kBAAkB;UAAAC,QAAA,GAAC,UAAQ,EAACC,aAAa,CAACW,MAAM;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClEb,OAAA;UAAGK,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAEC,aAAa,CAACY;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACNb,OAAA;QAAKK,SAAS,EAAC,iCAAiC;QAAAC,QAAA,eAC9CN,OAAA;UAAKK,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC/BN,OAAA;YAAKoB,GAAG,EAAEb,aAAa,CAACc,MAAO;YAACC,GAAG,EAAEf,aAAa,CAACC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENb,OAAA;QAAKK,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BN,OAAA;UAAGuB,KAAK,EAAC;QAAwB;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtCb,OAAA;UACEK,SAAS,EAAC,cAAc;UACxBmB,OAAO,EAAEA,CAAA,KAAMpB,gBAAgB,CAACqB,gBAAgB,CAAE;UAAAnB,QAAA,EACnD;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTb,OAAA;UAAGuB,KAAK,EAAC;QAAyB;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAENb,OAAA;MAAKK,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBJ,SAAS,CAACwB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC1B5B,OAAA;QAEEK,SAAS,EAAC,aAAa;QACvBmB,OAAO,EAAEA,CAAA,KAAMK,gBAAgB,CAACF,KAAK,CAAE;QAAArB,QAAA,gBAEvCN,OAAA;UAAKK,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BN,OAAA;YAAIK,SAAS,EAAC,cAAc;YAAAC,QAAA,GACzBqB,KAAK,CAACnB,KAAK,eACZR,OAAA;cAAMK,SAAS,EAAC,aAAa;cAAAC,QAAA,GAAC,IAAE,EAACqB,KAAK,CAAClB,IAAI,EAAC,GAAC;YAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC,eACLb,OAAA;YAAAM,QAAA,EAAOqB,KAAK,CAACG;UAAO;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAE5Bb,OAAA;YAAKK,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5BN,OAAA;cAAAM,QAAA,EAAOqB,KAAK,CAACb;YAAU;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC/Bb,OAAA;cAAMK,SAAS,EAAC,aAAa;cAAAC,QAAA,EAC1BH,eAAe,CAACY,IAAI,CAACC,KAAK,CAACW,KAAK,CAACb,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC;YAAC;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNb,OAAA;YAAAM,QAAA,GACGqB,KAAK,CAACI,IAAI,KAAK,OAAO,GAAG,UAAU,GAAG,EAAE,EACxCJ,KAAK,CAACK,KAAK;UAAA;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNb,OAAA;UAAKK,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5BN,OAAA;YAAKoB,GAAG,EAAEO,KAAK,CAACN,MAAO;YAACC,GAAG,EAAEK,KAAK,CAACnB;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA,GAxBDe,KAAK;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAyBP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACoB,EAAA,GA/EuBhC,KAAK;AAiF7B;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVE;AAWD,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}