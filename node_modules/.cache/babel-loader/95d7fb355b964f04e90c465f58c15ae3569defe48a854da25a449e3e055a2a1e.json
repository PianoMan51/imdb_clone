{"ast":null,"code":"var _jsxFileName = \"/Users/nikolajwold/Desktop/Projects/imdb/src/components/MovieContainer.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movie({\n  movieData,\n  renderStarIcons,\n  handleMovieReset,\n  handleMovieClick\n}) {\n  _s();\n  const [selectedMovie, setSelectedMovie] = React.useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie--container\",\n    children: selectedMovie ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-movie--container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-movie--textContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"selected--title\",\n          children: [selectedMovie.Title, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movie--year\",\n            children: [\" (\", selectedMovie.Year, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie--rating\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedMovie.imdbRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movie-stars\",\n            children: renderStarIcons(Math.round(selectedMovie.imdbRating * 2) / 4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selected--director\",\n          children: [\"Director: \", selectedMovie.Director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selected--actors\",\n          children: [\"Actors: \", selectedMovie.Actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selected--plot\",\n          children: selectedMovie.Plot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-movie--posterContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected--poster\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedMovie.Poster,\n            alt: selectedMovie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-arrow-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: () => handleMovieReset(setSelectedMovie),\n          children: \"Back to Movie List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-arrow-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie--list\",\n      children: movieData.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie--item\",\n        onClick: () => handleMovieClick(movie),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie--text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"movie--title\",\n            children: [movie.Title, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"movie--year\",\n              children: [\" (\", movie.Year, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: movie.Runtime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie--rating\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: movie.imdbRating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"movie-stars\",\n              children: renderStarIcons(Math.round(movie.imdbRating * 2) / 4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [movie.Type !== \"movie\" ? \"Series, \" : \"\", movie.Genre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie--poster\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.Poster,\n            alt: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(Movie, \"JhENnUjtiZQlPFLMQh6kL0r4AXc=\");\n_c = Movie;\n{\n  /*           <div className=\"movie--stats\">\n            <span>{selectedMovie.BoxOffice}</span>\n            <span>{selectedMovie.Awards}</span>\n            <span>\n              {\n                selectedMovie.Ratings.find(\n                  (rating) => rating.Source === \"Rotten Tomatoes\"\n                ).Value\n              }\n            </span>\n          </div> */\n}\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Movie","movieData","renderStarIcons","handleMovieReset","handleMovieClick","_s","selectedMovie","setSelectedMovie","useState","className","children","Title","Year","fileName","_jsxFileName","lineNumber","columnNumber","imdbRating","Math","round","Director","Actors","Plot","src","Poster","alt","class","onClick","map","movie","index","Runtime","Type","Genre","_c","$RefreshReg$"],"sources":["/Users/nikolajwold/Desktop/Projects/imdb/src/components/MovieContainer.js"],"sourcesContent":["import React from \"react\";\n\nexport default function Movie({\n  movieData,\n  renderStarIcons,\n  handleMovieReset,\n  handleMovieClick,\n}) {\n  const [selectedMovie, setSelectedMovie] = React.useState(null);\n  return (\n    <div className=\"movie--container\">\n      {selectedMovie ? (\n        <div className=\"selected-movie--container\">\n          <div className=\"selected-movie--textContainer\">\n            <h1 className=\"selected--title\">\n              {selectedMovie.Title}\n              <span className=\"movie--year\"> ({selectedMovie.Year})</span>\n            </h1>\n\n            <div className=\"movie--rating\">\n              <span>{selectedMovie.imdbRating}</span>\n              <span className=\"movie-stars\">\n                {renderStarIcons(Math.round(selectedMovie.imdbRating * 2) / 4)}\n              </span>\n            </div>\n            <p className=\"selected--director\">\n              Director: {selectedMovie.Director}\n            </p>\n            <p className=\"selected--actors\">Actors: {selectedMovie.Actors}</p>\n            <p className=\"selected--plot\">{selectedMovie.Plot}</p>\n          </div>\n          <div className=\"selected-movie--posterContainer\">\n            <div className=\"selected--poster\">\n              <img src={selectedMovie.Poster} alt={selectedMovie.Title} />\n            </div>\n          </div>\n\n          <div className=\"bottom-buttons\">\n            <i class=\"fa-solid fa-arrow-left\"></i>\n            <button\n              className=\"reset-button\"\n              onClick={() => handleMovieReset(setSelectedMovie)}\n            >\n              Back to Movie List\n            </button>\n            <i class=\"fa-solid fa-arrow-right\"></i>\n          </div>\n        </div>\n      ) : (\n        <div className=\"movie--list\">\n          {movieData.map((movie, index) => (\n            <div\n              key={index}\n              className=\"movie--item\"\n              onClick={() => handleMovieClick(movie)}\n            >\n              <div className=\"movie--text\">\n                <h2 className=\"movie--title\">\n                  {movie.Title}\n                  <span className=\"movie--year\"> ({movie.Year})</span>\n                </h2>\n                <span>{movie.Runtime}</span>\n\n                <div className=\"movie--rating\">\n                  <span>{movie.imdbRating}</span>\n                  <span className=\"movie-stars\">\n                    {renderStarIcons(Math.round(movie.imdbRating * 2) / 4)}\n                  </span>\n                </div>\n                <span>\n                  {movie.Type !== \"movie\" ? \"Series, \" : \"\"}\n                  {movie.Genre}\n                </span>\n              </div>\n              <div className=\"movie--poster\">\n                <img src={movie.Poster} alt={movie.Title} />\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\n{\n  /*           <div className=\"movie--stats\">\n            <span>{selectedMovie.BoxOffice}</span>\n            <span>{selectedMovie.Awards}</span>\n            <span>\n              {\n                selectedMovie.Ratings.find(\n                  (rating) => rating.Source === \"Rotten Tomatoes\"\n                ).Value\n              }\n            </span>\n          </div> */\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}