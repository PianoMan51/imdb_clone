{"ast":null,"code":"var _jsxFileName = \"/Users/nikolajwold/Desktop/Projects/imdb/src/components/Movie.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Star = ({\n  type\n}) => /*#__PURE__*/_jsxDEV(\"i\", {\n  className: `fa-${type} fa-star`,\n  \"aria-hidden\": \"true\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n_c = Star;\nexport default function Movie({\n  movieData\n}) {\n  const rating = roundRating(parseFloat(movie.imdbRating));\n  const solidStars = Math.floor(rating);\n  const hasHalfStar = rating % 1 !== 0;\n  const emptyStars = 10 - solidStars - (hasHalfStar ? 1 : 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie--list\",\n    children: movieData.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie--item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie--text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"movie--title\",\n          children: [movie.Title, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movie--year\",\n            children: [\" (\", movie.Year, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.Runtime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-regular fa-star\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-star-half-stroke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-star\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.imdbRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.Genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie--poster\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.Poster,\n          alt: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Movie;\nvar _c, _c2;\n$RefreshReg$(_c, \"Star\");\n$RefreshReg$(_c2, \"Movie\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Star","type","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Movie","movieData","rating","roundRating","parseFloat","movie","imdbRating","solidStars","Math","floor","hasHalfStar","emptyStars","children","map","index","Title","Year","Runtime","class","Genre","src","Poster","alt","_c2","$RefreshReg$"],"sources":["/Users/nikolajwold/Desktop/Projects/imdb/src/components/Movie.js"],"sourcesContent":["import React from \"react\";\n\nconst Star = ({ type }) => (\n  <i className={`fa-${type} fa-star`} aria-hidden=\"true\"></i>\n);\n\nexport default function Movie({ movieData }) {\n  const rating = roundRating(parseFloat(movie.imdbRating));\n  const solidStars = Math.floor(rating);\n  const hasHalfStar = rating % 1 !== 0;\n  const emptyStars = 10 - solidStars - (hasHalfStar ? 1 : 0);\n\n  return (\n    <div className=\"movie--list\">\n      {movieData.map((movie, index) => (\n        <div key={index} className=\"movie--item\">\n          <div className=\"movie--text\">\n            <h2 className=\"movie--title\">\n              {movie.Title}\n              <span className=\"movie--year\"> ({movie.Year})</span>\n            </h2>\n            <span>{movie.Runtime}</span>\n            <br></br>\n            <i class=\"fa-regular fa-star\"></i>\n            <i class=\"fa-solid fa-star-half-stroke\"></i>\n            <i class=\"fa-solid fa-star\"></i>\n\n            <span>{movie.imdbRating}</span>\n            <br></br>\n            <span>{movie.Genre}</span>\n          </div>\n          <div className=\"movie--poster\">\n            <img src={movie.Poster} alt={movie.Title} />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}