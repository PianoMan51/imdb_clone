{"ast":null,"code":"var _jsxFileName = \"/Users/nikolajwold/Desktop/Projects/imdb/src/components/Movie.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction renderStarIcons(rating) {\n  const starIcons = [];\n  const totalStars = 5;\n  for (let i = 1; i <= totalStars; i++) {\n    if (i <= rating) {\n      starIcons.push( /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-star\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 22\n      }, this));\n    } else if (i - 0.5 === rating) {\n      starIcons.push( /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-star-half-stroke\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 22\n      }, this));\n    } else {\n      starIcons.push( /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-regular fa-star\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 22\n      }, this));\n    }\n  }\n  return starIcons;\n}\nexport default function Movie({\n  movieData\n}) {\n  _s();\n  const [selectedMovie, setSelectedMovie] = React.useState(null);\n  function handleMovieClick(movie) {\n    setSelectedMovie(movie);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie--list\",\n    children: [movieData.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie--item\",\n      onClick: () => handleMovieClick(movie),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie--text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"movie--title\",\n          children: [movie.Title, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movie--year\",\n            children: [\" (\", movie.Year, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.Runtime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie--rating\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: movie.imdbRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movie-stars\",\n            children: renderStarIcons(Math.round(movie.imdbRating * 2) / 4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.Genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie--poster\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.Poster,\n          alt: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)), selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expanded-movie-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: selectedMovie.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedMovie.Plot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Director: \", selectedMovie.Director]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Actors: \", selectedMovie.Actors]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Movie, \"JhENnUjtiZQlPFLMQh6kL0r4AXc=\");\n_c = Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","renderStarIcons","rating","starIcons","totalStars","i","push","className","fileName","_jsxFileName","lineNumber","columnNumber","Movie","movieData","_s","selectedMovie","setSelectedMovie","useState","handleMovieClick","movie","children","map","index","onClick","Title","Year","Runtime","imdbRating","Math","round","Genre","src","Poster","alt","Plot","Director","Actors","_c","$RefreshReg$"],"sources":["/Users/nikolajwold/Desktop/Projects/imdb/src/components/Movie.js"],"sourcesContent":["import React from \"react\";\n\nfunction renderStarIcons(rating) {\n  const starIcons = [];\n  const totalStars = 5;\n\n  for (let i = 1; i <= totalStars; i++) {\n    if (i <= rating) {\n      starIcons.push(<i key={i} className=\"fa-solid fa-star\"></i>);\n    } else if (i - 0.5 === rating) {\n      starIcons.push(<i key={i} className=\"fa-solid fa-star-half-stroke\"></i>);\n    } else {\n      starIcons.push(<i key={i} className=\"fa-regular fa-star\"></i>);\n    }\n  }\n\n  return starIcons;\n}\n\nexport default function Movie({ movieData }) {\n  const [selectedMovie, setSelectedMovie] = React.useState(null);\n\n  function handleMovieClick(movie) {\n    setSelectedMovie(movie);\n  }\n\n  return (\n    <div className=\"movie--list\">\n      {movieData.map((movie, index) => (\n        <div\n          key={index}\n          className=\"movie--item\"\n          onClick={() => handleMovieClick(movie)}\n        >\n          <div className=\"movie--text\">\n            <h2 className=\"movie--title\">\n              {movie.Title}\n              <span className=\"movie--year\"> ({movie.Year})</span>\n            </h2>\n            <span>{movie.Runtime}</span>\n\n            <div className=\"movie--rating\">\n              <span>{movie.imdbRating}</span>\n              <span className=\"movie-stars\">\n                {renderStarIcons(Math.round(movie.imdbRating * 2) / 4)}\n              </span>\n            </div>\n            <span>{movie.Genre}</span>\n          </div>\n          <div className=\"movie--poster\">\n            <img src={movie.Poster} alt={movie.Title} />\n          </div>\n        </div>\n      ))}\n\n      {selectedMovie && (\n        <div className=\"expanded-movie-details\">\n          <h1>{selectedMovie.Title}</h1>\n          <p>{selectedMovie.Plot}</p>\n          <p>Director: {selectedMovie.Director}</p>\n          <p>Actors: {selectedMovie.Actors}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}