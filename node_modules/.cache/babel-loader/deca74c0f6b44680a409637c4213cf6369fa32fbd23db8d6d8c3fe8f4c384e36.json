{"ast":null,"code":"var _jsxFileName = \"/Users/nikolajwold/Desktop/Projects/imdb/src/components/Movie.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movie({\n  movieData\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie--container\",\n    children: movieData.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie--text\",\n      children: [movie.Title && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [movie.Title, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"movie--year\",\n          children: [\"(\", movie.Year, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: movie.Awards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: movie.Runtime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: movie.imdbRating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: movie.Genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"movie--plot\",\n        children: movie.Plot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie--poster\",\n        children: movieData.map((movie, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.Poster,\n          alt: movie.Title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Movie","movieData","className","children","map","movie","index","Title","Year","fileName","_jsxFileName","lineNumber","columnNumber","Awards","Runtime","imdbRating","Genre","Plot","src","Poster","alt","_c","$RefreshReg$"],"sources":["/Users/nikolajwold/Desktop/Projects/imdb/src/components/Movie.js"],"sourcesContent":["import React from \"react\";\n\nexport default function Movie({ movieData }) {\n  return (\n    <div className=\"movie--container\">\n      {movieData.map((movie, index) => (\n        <div key={index} className=\"movie--text\">\n          {movie.Title && (\n            <span>\n              {movie.Title} <span className=\"movie--year\">({movie.Year})</span>\n            </span>\n          )}\n          <span>{movie.Awards}</span>\n          <span>{movie.Runtime}</span>\n          <span>{movie.imdbRating}</span>\n          <span>{movie.Genre}</span>\n          <p className=\"movie--plot\">{movie.Plot}</p>\n\n          <div className=\"movie--poster\">\n            {movieData.map((movie, index) => (\n              <img key={index} src={movie.Poster} alt={movie.Title} />\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,KAAKA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAC3C,oBACEF,OAAA;IAAKG,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC9BF,SAAS,CAACG,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC1BP,OAAA;MAAiBG,SAAS,EAAC,aAAa;MAAAC,QAAA,GACrCE,KAAK,CAACE,KAAK,iBACVR,OAAA;QAAAI,QAAA,GACGE,KAAK,CAACE,KAAK,EAAC,GAAC,eAAAR,OAAA;UAAMG,SAAS,EAAC,aAAa;UAAAC,QAAA,GAAC,GAAC,EAACE,KAAK,CAACG,IAAI,EAAC,GAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CACP,eACDb,OAAA;QAAAI,QAAA,EAAOE,KAAK,CAACQ;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3Bb,OAAA;QAAAI,QAAA,EAAOE,KAAK,CAACS;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5Bb,OAAA;QAAAI,QAAA,EAAOE,KAAK,CAACU;MAAU;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/Bb,OAAA;QAAAI,QAAA,EAAOE,KAAK,CAACW;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1Bb,OAAA;QAAGG,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEE,KAAK,CAACY;MAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE3Cb,OAAA;QAAKG,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BF,SAAS,CAACG,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC1BP,OAAA;UAAiBmB,GAAG,EAAEb,KAAK,CAACc,MAAO;UAACC,GAAG,EAAEf,KAAK,CAACE;QAAM,GAA3CD,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwC,CACxD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GAhBEN,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiBV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACS,EAAA,GAzBuBrB,KAAK;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}