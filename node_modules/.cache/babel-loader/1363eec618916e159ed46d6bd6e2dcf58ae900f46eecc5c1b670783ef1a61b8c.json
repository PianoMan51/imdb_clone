{"ast":null,"code":"var _jsxFileName = \"/Users/nikolajwold/Desktop/Projects/imdb/src/components/Movie.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movie({\n  movieData\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie--list\",\n    children: movieData.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie--item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie--text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"movie--title\",\n          children: [movie.Title, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movie--year\",\n            children: [\" (\", movie.Year, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.Runtime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.imdbRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.Genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie--poster\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.Poster,\n          alt: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Movie","movieData","className","children","map","movie","index","Title","Year","fileName","_jsxFileName","lineNumber","columnNumber","Runtime","imdbRating","Genre","src","Poster","alt","_c","$RefreshReg$"],"sources":["/Users/nikolajwold/Desktop/Projects/imdb/src/components/Movie.js"],"sourcesContent":["import React from \"react\";\n\nexport default function Movie({ movieData }) {\n  return (\n    <div className=\"movie--list\">\n      {movieData.map((movie, index) => (\n        <div key={index} className=\"movie--item\">\n          <div className=\"movie--text\">\n            <h2 className=\"movie--title\">\n              {movie.Title}\n              <span className=\"movie--year\"> ({movie.Year})</span>\n            </h2>\n            <span>{movie.Runtime}</span>\n            <br></br>\n            <span>{movie.imdbRating}</span>\n            <br></br>\n            <span>{movie.Genre}</span>\n          </div>\n          <div className=\"movie--poster\">\n            <img src={movie.Poster} alt={movie.Title} />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,KAAKA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAC3C,oBACEF,OAAA;IAAKG,SAAS,EAAC,aAAa;IAAAC,QAAA,EACzBF,SAAS,CAACG,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC1BP,OAAA;MAAiBG,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACtCJ,OAAA;QAAKG,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BJ,OAAA;UAAIG,SAAS,EAAC,cAAc;UAAAC,QAAA,GACzBE,KAAK,CAACE,KAAK,eACZR,OAAA;YAAMG,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAC,IAAE,EAACE,KAAK,CAACG,IAAI,EAAC,GAAC;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,eACLb,OAAA;UAAAI,QAAA,EAAOE,KAAK,CAACQ;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5Bb,OAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTb,OAAA;UAAAI,QAAA,EAAOE,KAAK,CAACS;QAAU;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/Bb,OAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTb,OAAA;UAAAI,QAAA,EAAOE,KAAK,CAACU;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACNb,OAAA;QAAKG,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BJ,OAAA;UAAKiB,GAAG,EAAEX,KAAK,CAACY,MAAO;UAACC,GAAG,EAAEb,KAAK,CAACE;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA,GAdEN,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAeV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACO,EAAA,GAvBuBnB,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}